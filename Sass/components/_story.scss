.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, .1);
  background-color: rgba($color-white, .6); // makes the box's more transparent to not block out video in background.
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: $default-font-size;
  transform: skewX(-12deg); // Changes shape of entire block - will need to apply skew again to all child elements to display normally.

  @include respond(tab-port) {
    width: 100%;
    padding: 4rem;
    padding-left: 7rem;
  }

  @include respond(phone) {
    transform: skewX(0); // Remove the skewing shape and change to a normal box shape on smaller screens.
  }

  /*
  & > * { // Applying transform to direct child in this instance won't work on the image due to translateX already being applied below (can't be overwritten with another transform attribute. Will have to apply skew attribute to each child element instead in order to display normal over parent skew.
    transform: skewX(12deg);
  }
  */

  &__shape { // In order to apply shape-outside css need to apply both width and height and needs to be floated in order to apply shape.
    width: 15rem;
    height: 15rem;
    float: left;
    transform: translateX(-3rem) skewX(12deg);
    position: relative; // position relative for absolute positioning below.
    overflow: hidden; // Cuts out portion of the image that is overflowing its container.
    border-radius: 50%; // If browser doesn't understand clip-path css below will deploy a different method to achieving circle shape by setting border-radius on image instead.

    @supports (clip-path: polygon(0 0)) or (-webit-clip-path: polygon(0 0)) {
      -webkit-clip-path: circle(50% at 50% 50%);
      clip-path: circle(50% at 50% 50%);
      -webkit-shape-outside: circle(50% at 50% 50%); // prefix so that it works in safari and chrome - not currently working in edge and IE.
      shape-outside: circle(50% at 50% 50% /* at 50% center horizontally and vertically */); // shape-outside - allows to position and shape content around the target element. circle = creates a circle outline shape around content - setting 50% here is half the width and height of radius.
      border-radius: none;
    }

    @include respond(phone) {
      transform: translateX(-3rem) skewX(0);
    }
  }

  &__img {
    height: 100%; // Set to 100% so image will auto adapt to parent container above (height: 15rem) and will fill 100% of this space. Width will auto adjust to height set.
    transform: translateX(-4rem) scale(1.4); // Centers the image in the container a bit more
    backface-visibility: hidden; // fix's issue applying translate css above to ensure container keeps shape.
    transition: all .5s;
  }

  &__text {
    transform: skewX(12deg);

    @include respond(phone) {
      transform: skewX(0);
    }
  }

  &__caption { // css for text block that appears inside image container and displays on top on hover.
    position: absolute; // position absolution to center text in middle of circle container.
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%); // Set at 20% so that will position at the bottom of container (start position for hover effect).
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0; //Set to 0 so will be invisible on page load.
    transition: all .5s;
    backface-visibility: hidden; // hide the shaking effect in hover animation.
  }

  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -50%); // Will center within the container.
  }

  &:hover &__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); // Applies a blur on image and darkens the image (anything below 100% will darken).
  }

}


